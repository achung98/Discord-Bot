import javax.security.auth.login.LoginException;

import net.dv8tion.jda.core.AccountType;
import net.dv8tion.jda.core.JDABuilder;
import net.dv8tion.jda.core.entities.Member;
import net.dv8tion.jda.core.entities.MessageChannel;
import net.dv8tion.jda.core.entities.PrivateChannel;
import net.dv8tion.jda.core.entities.User;
import net.dv8tion.jda.core.events.message.MessageReceivedEvent;
import net.dv8tion.jda.core.hooks.ListenerAdapter;
import net.dv8tion.jda.core.managers.GuildController;

public class Test extends ListenerAdapter {

	public static void main(String[] args) throws LoginException {
		PrivateChannel privChannel;
		//Bot object
		JDABuilder example = new JDABuilder(AccountType.BOT);
		//Set the bot token (Sale en la pagina de developers de discord)
		example.setToken("NDgyMzQyNDY4NzcyNDI5ODI0.DmM94Q.4uQ8T-K1Gr2C-IyBokWP2GCwcGk")
		//Add a new object of Test as the event listner
		.addEventListener(new Test())
		//Connect the bot to the server
		.buildAsync();
	}
	
	public void onMessageReceived(MessageReceivedEvent event) {
		MessageChannel channel = event.getChannel();
		String message = event.getMessage().getContentRaw();
		User user = event.getAuthor();
		Member member = event.getMember();
		GuildController gc = new GuildController(event.getGuild());
		if(event.getAuthor().isBot())
			return;
		
		if(message.contains("nigroid")) {
			event.getMessage().delete();
			checkMsg(gc, member, channel, user);
		} else {
			channel.sendMessage("asdasdsad").queue();
		}
	}
	
	private void checkMsg(GuildController gc, Member member, MessageChannel channel, User user) {
		
		if(!Warning.checkMember(member)) {
			channel.sendMessage("You have " + Warning.getWarnings(member) + " warning/s " + user.getAsMention()).queue();
		} else {
			gc.kick(member).queue();
		}
	}
}
